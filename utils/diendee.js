/* This file contains function used by diendee for basic 
    text channel communication with the users. */

/**
 * Generates a default Diendee message
 * @param {String} text         The text for Diendee to send
 */
const genBasicEmbed = function(text) {
    let embed = new Discord.RichEmbed()
        .setThumbnail(client.user.displayAvatarURL)
        .setTitle(`**${client.user.username} says:**`)
        .setColor("#fcce63");
    if (text) {
        embed.setDescription(text);
    }
    return embed;
}

/**
 * Removes a previously pinned embed generated by Diendee
 * @param {Message} message             The message that triggered this function
 * @param {String} start_text           The text in the embed to remove
 */
const removePinnedMessages = function(message, start_text) {
    message.channel.fetchPinnedMessages().then(function(messages) {
        messages = messages.array();
        messages.forEach(function(mes) {
            if (
                mes.author.id == client.user.id &&
                mes.embeds[0].description.substring(0, start_text.length) ==
                    start_text
            ) {
                mes.unpin();
            }
        });
    });
}

/**
 * Prints some information about Diendee
 * @param {Message} message         The message that triggered this function
 */
const about = function(message) {
    var owner = client.users.get(auth.owner);
    let embed = genBasicEmbed(
        "Greetings adventurer!\nMy name is Diendee and I will aid you on your journey.\n\nType `" +
            auth.prefix +
            "usage` to learn how to talk to me!"
    ).setFooter(
        `This bot was created by ${owner.username}`,
        owner.displayAvatarURL
    );

    message.channel.send(embed);
}

/**
 * Prints documentation for the commands supported by Diendee
 * @param {Message} message         The message that triggered this function
 */
const usage = function(message) {
    const message_text = "Here are some ways you can talk to me:";
    //Remove old usage commands
    removePinnedMessages(message, message_text);
    //All the usage commands
    let embed = genBasicEmbed(message_text)
        .addField(`${auth.prefix}about`, "Learn about me!")
        .addField(`${auth.prefix}usage`, "Learn how to talk to me!")
        .addField(
            `${auth.prefix}roll _[dice{+dice}...]_`,
            "I'll roll the specified roll.\nRolls can be specifed as `$roll 2d6+d8+2d20`.\nYou can also specify multiple rolls, just seperate them with a space like so: `$roll d20 2d6+5`.\n"
        )
        .addField(
            `${auth.prefix}rollPC`,
            "I'll roll a new character for you. (4d6, drop the lowest, 6 times)"
        )
        .addField(
            `${auth.prefix}check _{stat|skill}_`,
            "I'll roll a check for your PC. Just specify a stats or skills.\nTry `$check Strength` or `$check Perception`"
        )
        .addField(
            `${auth.prefix}stats _{name ...}_`,
            "I'll look up some stats for you. I'll look up yours if you don't specify character(s)."
        )
        .addField(
            `${auth.prefix}bio _{name ...}_`,
            "I'll to look up some bios. I'll look up yours if you don't specify character(s)."
        )
        .addField(
            `${auth.prefix}readbio _{name ...}_`,
            "I'll send you some adventurer(s)'s life story. I'll find yours if you don't specify character(s)."
        )
        .addField(
            `${auth.prefix}get _attribute {name ...}_`,
            "I'll tell you the proficiencies for a given stat. I'll look up yours if you don't specify character(s)."
        )
        .addField(
            `${auth.prefix}initiative _{first.last:modifier ...}_`,
            "I'll roll initiative for you and pin it to the channel. I can roll NPCs too if you give me their name and initiative modifier."
        );
    //Pin usage commands to the channel
    message.channel.send(embed).then(function(message) {
        message.pin();
    });
}

/**
 * Generates some flavor text for Diendee to say before sending a bio
 */
const genFlavorText = function() {
    //Get a random num and plug it into a switch
    var num = Math.floor(Math.random() * 5) + 1;
    switch (num) {
        case 1:
            return "You'd better get cozy. This is a long one.";
        case 2:
            return "A nice, quick read.";
        case 3:
            return "This one may take you a while. Good Luck!";
        case 4:
            return "Not much to learn here, I'm afraid, but you can take a look.";
        case 5:
            return "I hope you find what you are looking for.";
    }
}


module.exports = { genBasicEmbed, removePinnedMessages, about, usage, genFlavorText };
