/* This file contains function used by diendee for basic 
    text channel communication with the users. */
const Discord = require('discord.js');

/**
 * Generates a default Diendee message
 * @param {Discord.Client} - Diendee Client Reference
 * @param {String} text - The text for Diendee to send
 */
const genBasicEmbed = (client, text) => {
    let embed = new Discord.RichEmbed()
        .setThumbnail(client.user.displayAvatarURL)
        .setTitle(`**${client.user.username} says:**`)
        .setColor('#fcce63');
    if (text) {
        embed.setDescription(text);
    }
    return embed;
};

/**
 * Generates a message tagged with a specific user
 * @param {Discord.Client} client
 * @param {Discord.User} author
 * @param {String} title
 */
const genAuthoredEmbed = (thumbnail, author, title) => {
    return new Discord.RichEmbed()
        .setThumbnail(thumbnail)
        .setAuthor(title, author.displayAvatarURL)
        .setColor('#fcce63');
};

/**
 * Removes a previously pinned embed generated by Diendee
 * @param {Message} message             The message that triggered this function
 * @param {String} start_text           The text in the embed to remove
 */
const removePinnedMessages = (client, message, start_text) => {
    message.channel.fetchPinnedMessages().then(messages => {
        messages = messages.array();
        messages.forEach(mes => {
            if (
                mes.author.id == client.user.id &&
                mes.embeds[0].description.substring(0, start_text.length) == start_text
            ) {
                mes.unpin();
            }
        });
    });
};

/**
 * Generates some flavor text for Diendee to say before sending a bio
 * @return {string} Some flavor text
 */
const genFlavorText = () => {
    switch (Math.floor(Math.random() * 5) + 1) {
        case 1:
            return "You'd better get cozy. This is a long one.";
        case 2:
            return 'A nice, quick read.';
        case 3:
            return 'This one may take you a while. Good Luck!';
        case 4:
            return "Not much to learn here, I'm afraid, but you can take a look.";
        case 5:
            return 'I hope you find what you are looking for.';
    }
};

module.exports = {
    genBasicEmbed,
    genAuthoredEmbed,
    removePinnedMessages,
    genFlavorText,
};
