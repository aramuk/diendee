/**
 * Functions used by diendee for basic text channel communication with the users.
 */

const Discord = require('discord.js');
const logger = require('./logger');

/**
 * Generates a default Diendee message.
 * @param {Client} client Diendee Client Reference.
 * @param {string} text Title for the embed.
 * @param {string} text Optional description for the embed.
 */
const genBasicEmbed = (client, title, text = '') => {
  let embed = new Discord.MessageEmbed()
    .setThumbnail(client.user.avatarURL())
    .setColor('#fcce63')
    .setTitle(`**${title}**`);

  if (text && text.length > 0) {
    embed.setDescription(text);
  }
  return embed;
};

/**
 * Generates a message tagged with a specific user
 * @param {Client} client
 * @param {User} author
 * @param {string} title
 */
const genAuthoredEmbed = (thumbnail, author, title) => {
  return new Discord.MessageEmbed()
    .setThumbnail(thumbnail)
    .setAuthor(title, author.avatarURL())
    .setColor('#fcce63');
};

/**
 * Generates a message embed for a specfic character
 * @param {string} thumbnail
 * @param {string} title
 * @param {string} desc
 * @param {string} color
 */
const genCharacterEmbed = (thumbnail, title, desc, color) => {
  return new Discord.MessageEmbed()
    .setThumbnail(thumbnail)
    .setTitle(title)
    .setDescription(desc)
    .setColor(color);
};

/**
 * Removes a previously pinned embed generated by Diendee.
 * @param {Client} client Discord client reference.
 * @param {Message} message The message that triggered this function.
 * @param {string} title The title of the embed to remove.
 */
const removePinnedMessages = (client, message, title) => {
  const boldedTitle = `**${title}**`;
  message.channel.messages.fetchPinned().then(messages => {
    messages = messages.array();
    messages.forEach(mes => {
      if (
        mes.author.id == client.user.id &&
        (mes.embeds[0]?.title === boldedTitle || mes.embeds[0]?.title === title)
      ) {
        mes.unpin();
      }
    });
  });
};

/**
 * Generates some flavor text for Diendee to say before sending a bio
 * @return {string} Some flavor text
 */
const genFlavorText = () => {
  switch (Math.floor(Math.random() * 5) + 1) {
    case 1:
      return "You'd better get cozy. This is a long one.";
    case 2:
      return 'A nice, quick read.';
    case 3:
      return 'This one may take you a while. Good Luck!';
    case 4:
      return "Not much to learn here, I'm afraid, but you can take a look.";
    case 5:
      return 'I hope you find what you are looking for.';
  }
};

module.exports = {
  genBasicEmbed,
  genAuthoredEmbed,
  genCharacterEmbed,
  removePinnedMessages,
  genFlavorText,
};
